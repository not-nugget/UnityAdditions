namespace UnityAdditions
{
    /// <summary>
    /// Static base class for storing configuration data used by other classes and extensions
    /// </summary>
    public static class UnityAdditionSettings
    {
        /// <summary>
        /// Suppress all warnings that would be generated by methods upon incorrect input being provided. Use if your code is intentionally
        /// operating and the thrown warnings do not apply to you. NOTE: This can be done on a per-incovation basis as opposed to class-wide.
        /// </summary>
        public static bool SuppressWarnings { get; set; } = false;

        /// <summary>
        /// Suppress any error that is thrown because of bad input. NOT RECCOMMENDED
        /// </summary>
        public static bool SuppressErrors { get; set; } = false;

        /// <summary>
        /// Should all classes and extensions use Unity.Mathematics as opposed to UnityEngine.Mathf for mathematic and random operations? NOTE: The new
        /// mathematics library uses a shader-similar syntax, such as float3 instead of Vector3. Thus, conversions may add overhead and decrease
        /// performance of your application. However, Unity.Mathematics is neccesary in Unity's Burst compiler, and can often produce better
        /// performance when using it with burst as well. Your mileage may vary.
        /// </summary>
        public static bool UseMathematics { get; set; } = false;
    }
}